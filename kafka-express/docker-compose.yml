version: "3.8"

services:
  zookeeper:
    image: confluentinc/cp-zookeeper:7.5.0
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_TICK_TIME: 2000
    ports:
      - "2181:2181"

  kafka:
    image: confluentinc/cp-kafka:7.5.0
    depends_on:
      - zookeeper
    ports:
      - "9092:9092"
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka:9092,PLAINTEXT_HOST://localhost:9092
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT,PLAINTEXT_HOST:PLAINTEXT
      KAFKA_INTER_BROKER_LISTENER_NAME: PLAINTEXT
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1

  schema-registry:
    image: confluentinc/cp-schema-registry:7.5.0
    depends_on:
      - kafka
    ports:
      - "8081:8081"
    environment:
      SCHEMA_REGISTRY_HOST_NAME: schema-registry
      SCHEMA_REGISTRY_KAFKASTORE_BOOTSTRAP_SERVERS: PLAINTEXT://kafka:9092

  postgres:
    image: postgres:14
    restart: always
    environment:
      POSTGRES_USER: stackline
      POSTGRES_PASSWORD: stackline
      POSTGRES_DB: orders
    ports:
      - "5432:5432"
    volumes:
      - pgdata:/var/lib/postgresql/data

  express-kafka:
    build: .
    container_name: express-kafka
    depends_on:
      - kafka
      - schema-registry
      - postgres
    ports:
      - "3000:3000"
    environment:
      KAFKA_BROKER: kafka:9092
      SCHEMA_REGISTRY_URL: http://schema-registry:8081
      POSTGRES_HOST: postgres
      POSTGRES_PORT: 5432
      POSTGRES_USER: stackline
      POSTGRES_PASSWORD: stackline
      POSTGRES_DB: orders
    volumes:
      - ./src:/app/src
    working_dir: /app
    command: node dist/server.js

volumes:
  pgdata:
